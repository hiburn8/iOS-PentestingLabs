//
//  ViewController.m
//  Calculator
//
//  Created by LDC on 7/25/13.
//  Copyright (c) 2013 Todd Perkins. All rights reserved.
//

#import "ViewController.h"
#include <unistd.h>

@interface ViewController ()

@end

@implementation ViewController

-(IBAction)PlayAudioButton:(id)sender{
    AudioServicesPlaySystemSound(PlaySoundIDButton);
}

- (void)viewDidLoad
{
    
    UIAlertView *alert = [[UIAlertView alloc]
                          initWithTitle: @""//@"Try Again"
                          message: @"Hint: A source says the bomber left a label somewhere with the disarm code on it"
                          delegate: nil
                          cancelButtonTitle:@"got it"
                          otherButtonTitles:nil];
    [alert show];
    
    
    //testsounds
    
    NSURL *soundFileURL = [[NSBundle mainBundle] URLForResource:@"c4_click2" withExtension:@"wav"];
    if (soundFileURL != nil)
    {
        player = [[AVAudioPlayer alloc] initWithContentsOfURL:soundFileURL error:nil];
        player.numberOfLoops = -1; //infinite
    }
    
    //button sound
    NSURL *SoundURL1 = [NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@"c4_click" ofType:@"wav"]];
    AudioServicesCreateSystemSoundID((__bridge CFURLRef)SoundURL1, &PlaySoundIDButton);
    
    //error sound
    NSURL *SoundURL2 = [NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@"blip2" ofType:@"wav"]];
    AudioServicesCreateSystemSoundID((__bridge CFURLRef)SoundURL2, &PlaySoundIDError);
    
    //planted sound
    NSURL *SoundURL3 = [NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@"bombpl" ofType:@"wav"]];
    AudioServicesCreateSystemSoundID((__bridge CFURLRef)SoundURL3, &PlaySoundIDPlant);
    
    //explode sound
    NSURL *SoundURL4 = [NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@"c4_explode1" ofType:@"wav"]];
    AudioServicesCreateSystemSoundID((__bridge CFURLRef)SoundURL4, &PlaySoundIDExplode);
    
    //defuse sound
    NSURL *SoundURL5 = [NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@"bombdef" ofType:@"wav"]];
    AudioServicesCreateSystemSoundID((__bridge CFURLRef)SoundURL5, &PlaySoundIDDiffused);
    
    //plantFX
    NSURL *SoundURL6 = [NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@"c4_plant" ofType:@"wav"]];
    AudioServicesCreateSystemSoundID((__bridge CFURLRef)SoundURL6, &PlaySoundIDPlantFX);
    
    
    //setup sounds
    AudioServicesPlaySystemSound(PlaySoundIDPlant);
    AudioServicesPlaySystemSound(PlaySoundIDPlantFX);
   [player play];
    

    [super viewDidLoad];
	// Do any additional setup after loading the view, typically from a nib.

    attempts = 4;
    valueString = @"";
    armState = 1;
    armCode = 5355857;
    
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


-(IBAction)tappedNumber:(UIButton*)btn
{
    if (!attempts <= 0){
    
    AudioServicesPlaySystemSound(PlaySoundIDButton);
    passLen ++;
    int num = btn.tag;
    NSString *numAsString = [NSString stringWithFormat:@"%i",num];
    valueString = [valueString stringByAppendingString:numAsString];
    
    total = [valueString intValue];
    status.text = valueString;
    
    
    //check input
     if (passLen > 6)
     {
         if (armState == 1)
         {
          
             attempts --;
             
             if (total == armCode)
             {
                 armState = 0;
                 attempts = 4;
                 status.text = @"disarmed";
                 [player stop];
                 AudioServicesPlaySystemSound(PlaySoundIDDiffused);
                 
                 UIAlertView *alert = [[UIAlertView alloc]
                                       initWithTitle: @"Congratulations!"
                                       message: @"The flag is: 'ipressed(disarmcodehere)becauseitfeltright'"
                                       delegate: nil
                                       cancelButtonTitle:@"ok"
                                       otherButtonTitles:nil];
                 [alert show];
             }
             
             else if (attempts == 0)
             {
                 [player stop];
                 AudioServicesPlaySystemSound(kSystemSoundID_Vibrate);
                 AudioServicesPlayAlertSound(PlaySoundIDExplode);
                 status.text = @"goodbye";
                 
                 
                 dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(8 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
                     exit(0);
});
                 
                 
                 
             }
             else
             {
                 
                 status.text = [NSString stringWithFormat:@"%i left",attempts];
                 AudioServicesPlaySystemSound(PlaySoundIDError);
                 //AudioServicesPlaySystemSound(kSystemSoundID_Vibrate);
             }
             
             total = 0;
             valueString = @"";
             passLen = 0;
             
         }
         else if (armState == 0)
         {
          
             if (total == armCode)
             {
                 armState = 1;
                 
                 status.text = @"armed";
                 AudioServicesPlaySystemSound(PlaySoundIDPlant);
                 AudioServicesPlaySystemSound(PlaySoundIDPlantFX);
                 [player play];
             }
             
             else
             {

                 status.text = [NSString stringWithFormat:@""];
                 AudioServicesPlaySystemSound(PlaySoundIDError);
             }
             
             total = 0;
             valueString = @"";
             passLen = 0;
             
         }
         
        }
    }
    
}

@end
